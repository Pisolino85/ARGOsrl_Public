/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      createBafflesDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

internalFacesOnly true;

baffles
{
    baffleRotor
    {
        type        faceZone;
        zoneName    rotor;

        patches
        {
            master
            {
                name            AMI1;
                type            cyclicAMI;
                matchTolerance  0.0001;
                neighbourPatch  AMI2;
                lowWeightCorrection 0.2;
            }
            slave
            {
                name            AMI2;
                type            cyclicAMI;
                neighbourPatch  AMI1;
                lowWeightCorrection 0.2;
            }
        }
    }
}

// PATCH per mix AMI/BC in caso di dynamicMesh traslazione [Serve anche topoSet -constant]

//internalFacesOnly false;


// Baffles to create.
//baffles
//{
//    // NOTE: cyclicAMI patches MUST BE defined PRIOR to their associted
//    //       blockage patches
//
//    ACMI1
//    {
//        //- Use predefined faceZone to select faces and orientation.
//        type        faceZone;
//        zoneName    overimpeller-zone;
//
//        patches
//        {
//            master
//            {
//                //- Master side patch
//                name            overimpeller-overlap;
//                type            cyclicACMI;
//                matchTolerance  0.0001;
//                neighbourPatch  overtreno-overlap;
//                nonOverlapPatch overimpeller-wall;
//                ordering        noOrdering;
//            }
//            slave // not used since we're manipulating a boundary patch
//            {
//                //- Slave side patch
//                name            overimpeller-overlap;
//                type            patch;
//            }
//
//            master2
//            {
//                //- Master side patch
//                name            overimpeller-wall;
//                type            wall;
//            }
//            slave2 // not used since we're manipulating a boundary patch
//            {
//                //- Slave side patch
//                name            overimpeller-wall;
//                type            wall;
//            }
//
//        }
//    }
//    ACMI2
//    {
//        //- Use predefined faceZone to select faces and orientation.
//        type        faceZone;
//        zoneName    overtreno-zone;
//
//        patches
//        {
//            master
//            {
//                //- Master side patch
//                name            overtreno-overlap;
//                type            cyclicACMI;
//                matchTolerance  0.0001;
//                neighbourPatch  overimpeller-overlap;
//                nonOverlapPatch overtreno-wall;
//                ordering        noOrdering;
//            }
//            slave // not used since we're manipulating a boundary patch
//            {
//                //- Slave side patch
//                name            overtreno-overlap;
//                type            patch;
//            }
//
//            master2
//            {
//                //- Master side patch
//                name            overtreno-wall;
//                type            wall;
//            }
//            slave2 // not used since we're manipulating a boundary patch
//            {
//                //- Slave side patch
//                name            overtreno-wall;
//                type            wall;
//            }
//        }
//    }
//}


// ************************************************************************* //
