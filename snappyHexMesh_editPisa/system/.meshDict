/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      meshDict;
}

surfaceFile "constant/cfMeshSurface/FluidDomain-features.fms"; // Patch al file STL/...

////////////////////////////////////////////////////////////////////////////////////////
// Gestione dei refinement

// maxCellSize 3; // Dimensione della blockMesh di partenza in metri

// boundaryCellSize 1.5; // Dimensione del refinement sulla boundary in m globale

// boundaryCellSizeRefinementThickness 4.5; // Distanza a cui arriva il boundaryCellSize

// minCellSize 0.375; // Dimensione minima delle celle del dominio con attivazione refinement in automatico

SCRIPT-GENERAL

localRefinement
{
//    "injection.*"
//    {
//         additionalRefinementLevels 2; // Livelli aggiuntivi di refinement in livelli
//         refinementThickness 0.003;    // Spessore del refinement level in m
//    }

SCRIPT-REFINEMENT
}

////////////////////////////////////////////////////////////////////////////////////////
// Gestione delle CELLE

keepCellsIntersectingBoundary 1; //tiene le celle che intersecano la boundary 1 OK, 0 NO

checkForGluedMesh 1; //attivo se keepCellsIntersectingBoundary e' attivo

// Mantiene le celle che intersecano una determinata patch
keepCellsIntersectingPatches
{
//      "injection.*"
//      {
//         keepCells 1; //Tiene le celle 1 SI 0 NO
//      }
SCRIPT-KEEPCELLS
}

removeCellsIntersectingPatches
{
//     "injection.*"
//     {
//        keepCells 1; //0 rimuovi 1 tieni
//     }
SCRIPT-KEEPCELLS
}

//stops the meshing process when it is not possible to capture all features of the input geometry
//enforceGeometryConstraints 1;

////////////////////////////////////////////////////////////////////////////////////////
// Gestione dei boundary layers

boundaryLayers
{
   nLayers 0; // Numero di layer globali

   thickessRatio 1.2; // Rapporto d'aspetto

   maxFirstLayerThickness 0.5; // Altezza prima cella m

   patchBoundaryLayers
   {
//      "wall_mold.*"
//      {
//         nLayers  4;
//         thickessRatio 1.1;
//         maxFirstLayerThickness 0.5;
//
//         allowDisontinuity  0; // Garantisce che il numero dei layers di questa patch non si espanda alle altre 1 ATTIVO 0 INATTIVO
//      }

SCRIPT-BL
   }

   optimiseLayer 1;

   untangleLayers 1;

   optimisationParameters
   {
      // number of iterations in the procedure for smoothing normal vectors in the boundary layer. It is not mandatory, and the default value is five
      nSmoothNormals 5;

      // number of iterations in the smoothing procedure. The settings is not mandatory and its default value is five
      maxNumIterations 5;

      // ratio between the maximum allowed layer thickness and the estimated feature size. It is used to limit layer thickness in the regions dominated by curvature. 
      // It is not mandatory, and its valid range is between zero and one. The default value is 0.3
      featureSizeFactor 0.3;

      // surface normal vectors, and aligns boundary-layer edges to point in the normal direction. The setting is not mandatory, and is active by default
      reCalculateNormals 1;

      // controls the maximum difference of the layer thickness between the two neighbouring points, divided by the distance between the points.
      // It is not mandatory, and the valid range is between zero and infinity. Lower values reduce layer thickness thin and enforce uniform thickness distribution
      relThicknessTol 0.0001;
   }
}

////////////////////////////////////////////////////////////////////////////////////////
// Gestione del workflow

workflowControls
{
   //templateGeneration
   // stops the meshing process after the initial template has been generated. 
   // It is useful for checking whether the template mesh is fine enough to resolve required geometry features

   //surfaceTopology
   // stops after the surface of the mesh has been cleansed from invalid connections of surface faces. 
   // It is useful to stop here when the settings are coarse for the geometry under consideration.

   //surfaceProjection
   // instructs the mesher to stop after projection of volume meshâ€™s surface on the input geometry. 
   // It is useful to stop here and check whether the mesh has been projected to the correct locations at the input geometry

   //patchAssignment
   // stops the meshing process after each boundary face is assigned a boundary patch it belong to. 
   // It is useful to stop here and check whether feature edges are resolved correctly

   //edgeExtraction
   // stops the meshing process after the input geometry has been preserved in the meshing process. 
   // It is useful for checking the quality of mesh surface, and fin locations where modifications are need to generate the desired mesh

   //boundaryLayerGeneration
   // stops the meshing process after the boundary layers have been generated. 
   // It is useful for checking whether the topology of the layer meets the required criteria

   //meshOptimisation
   // stops after the thorough optimisation has been performed. 
   // It is useful for checking the quality of the resulting mesh

   //boundaryLayerRefinement
   // stops after the boundary layer generation process is completed.
   // It is useful for checking the quality of the boundary layer


   //   stopAfter ...;

   //   restartFromLatestStep 1;
}

// Ferma la mesh quando non riesce a catturare tutte le feature del file STL
// enforceGeometryConstraints 1;

////////////////////////////////////////////////////////////////////////////////////////
// Solutori a disposizione

// checkSurfaceMesh

// surfaceFeatureEdges

// improveMeshQuality

// improveSymmetryPlanes

// preparePar

// tetMesh

// pMesh

// cartesianMesh

////////////////////////////////////////////////////////////////////////////////////////
// Qualita della mesh

//meshQualitySettings
//{
//    maxNonOrthogonality        30;
//
//    minTetQuality              1e-10;
//}

